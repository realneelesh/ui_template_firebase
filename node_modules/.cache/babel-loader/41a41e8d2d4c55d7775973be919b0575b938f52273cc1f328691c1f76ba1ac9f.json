{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/project2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\ntry {\n  const app = initializeApp(firebaseConfig);\n} catch (error) {\n  console.log('Error:', error);\n}\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth(app);\nsignInWithPopup(auth, provider).then(result => {\n  // This gives you a Google Access Token. You can use it to access the Google API.\n  const credential = GoogleAuthProvider.credentialFromResult(result);\n  const token = credential.accessToken;\n  // The signed-in user info.\n  const user = result.user;\n  // IdP data available using getAdditionalUserInfo(result)\n  // ...\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message;\n  // The email of the user's account used.\n  const email = error.customData.email;\n  // The AuthCredential type that was used.\n  const credential = GoogleAuthProvider.credentialFromError(error);\n  // ...\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"Hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","getAuth","signInWithPopup","GoogleAuthProvider","initializeApp","getAnalytics","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","error","console","log","provider","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","errorCode","code","errorMessage","message","email","customData","credentialFromError","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/neeleshsharma/Desktop/project2/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\ntry\n{\n    const app = initializeApp(firebaseConfig);\n} catch(error) {\n    console.log('Error:', error)\n}\n\nconst provider = new GoogleAuthProvider();\n\nconst auth = getAuth(app);\nsignInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // IdP data available using getAdditionalUserInfo(result)\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.customData.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      Hi\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;;AAE5E;AACA,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAC5CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGZ,YAAY,CAACW,GAAG,CAAC;AAEnC,IACA;EACI,MAAMA,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AAC7C,CAAC,CAAC,OAAMU,KAAK,EAAE;EACXC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;AAChC;AAEA,MAAMG,QAAQ,GAAG,IAAIlB,kBAAkB,EAAE;AAEzC,MAAMmB,IAAI,GAAGrB,OAAO,CAACe,GAAG,CAAC;AACzBd,eAAe,CAACoB,IAAI,EAAED,QAAQ,CAAC,CAC5BE,IAAI,CAAEC,MAAM,IAAK;EAChB;EACA,MAAMC,UAAU,GAAGtB,kBAAkB,CAACuB,oBAAoB,CAACF,MAAM,CAAC;EAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;EACpC;EACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;EACxB;EACA;AACF,CAAC,CAAC,CAACC,KAAK,CAAEZ,KAAK,IAAK;EAClB;EACA,MAAMa,SAAS,GAAGb,KAAK,CAACc,IAAI;EAC5B,MAAMC,YAAY,GAAGf,KAAK,CAACgB,OAAO;EAClC;EACA,MAAMC,KAAK,GAAGjB,KAAK,CAACkB,UAAU,CAACD,KAAK;EACpC;EACA,MAAMV,UAAU,GAAGtB,kBAAkB,CAACkC,mBAAmB,CAACnB,KAAK,CAAC;EAChE;AACF,CAAC,CAAC;;AAEJ,SAASoB,GAAGA,CAAA,EAAG;EACb,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAErB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEV;AAACC,EAAA,GANQP,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}