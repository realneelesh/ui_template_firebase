{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/project2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut, onAuthStateChanged } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { browserStorage, userInfoKey } from './BrowserStorage';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth(app);\nfunction App() {\n  _s();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid;\n        console.log(user);\n        // ...\n      } else {\n        console.log('user out');\n        // User is signed out\n        // ...\n      }\n    });\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        signOut(auth).then(() => {\n          // Sign-out successful.\n          browserStorage.removeItem(userInfoKey);\n        }).catch(error => {\n          // An error happened.\n        });\n      },\n      children: \"out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        signInWithRedirect(auth, provider);\n      },\n      children: \" signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getRedirectResult(auth).then(result => {\n          // This gives you a Google Access Token. You can use it to access Google APIs.\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n\n          // The signed-in user info.\n          const user = result.user;\n          console.log(\"aa\");\n          browserStorage.setItem(userInfoKey, JSON.stringify(user));\n          // IdP data available using getAdditionalUserInfo(result)\n          // ...\n        }).catch(error => {\n          var _error$customData;\n          // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error === null || error === void 0 ? void 0 : (_error$customData = error.customData) === null || _error$customData === void 0 ? void 0 : _error$customData.email;\n          // The AuthCredential type that was used.\n          console.log(error);\n          const credential = GoogleAuthProvider.credentialFromError(error);\n          // ...\n          // ...\n        });\n      },\n      children: \"get info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getAuth","signInWithRedirect","GoogleAuthProvider","getRedirectResult","signOut","onAuthStateChanged","initializeApp","getAnalytics","browserStorage","userInfoKey","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","provider","auth","App","_s","user","uid","console","log","className","children","onClick","then","removeItem","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","result","credential","credentialFromResult","token","accessToken","setItem","JSON","stringify","_error$customData","errorCode","code","errorMessage","message","email","customData","credentialFromError","_c","$RefreshReg$"],"sources":["/Users/neeleshsharma/Desktop/project2/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut, onAuthStateChanged } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { browserStorage, userInfoKey } from './BrowserStorage';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst provider = new GoogleAuthProvider();\n\nconst auth = getAuth(app);\n\nfunction App() {\n\n  useEffect(()=>{\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid;\n        console.log(user);\n        // ...\n      } else {\n        console.log('user out');\n        // User is signed out\n        // ...\n      }\n    });\n  })\n\n  return (\n    <div className=\"App\">\n      <button onClick={()=>{\n        signOut(auth).then(() => {\n          // Sign-out successful.\n          browserStorage.removeItem(userInfoKey);\n        }).catch((error) => {\n          // An error happened.\n        });\n      }}>out</button>\n      <button onClick={()=>{\n      signInWithRedirect(auth, provider);\n      }}> signin</button>\n      <button onClick={()=>{\n        getRedirectResult(auth)\n        .then((result) => {\n          // This gives you a Google Access Token. You can use it to access Google APIs.\n          const credential = GoogleAuthProvider.credentialFromResult(result);\n          const token = credential.accessToken;\n  \n          // The signed-in user info.\n          const user = result.user;\n          console.log(\"aa\");\n          browserStorage.setItem(userInfoKey, JSON.stringify(user));\n          // IdP data available using getAdditionalUserInfo(result)\n          // ...\n        }).catch((error) => { \n           // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error?.customData?.email;\n            // The AuthCredential type that was used.\n          console.log(error);\n\n            const credential = GoogleAuthProvider.credentialFromError(error);\n            // ...\n          // ...\n        });\n      }}>get info</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}