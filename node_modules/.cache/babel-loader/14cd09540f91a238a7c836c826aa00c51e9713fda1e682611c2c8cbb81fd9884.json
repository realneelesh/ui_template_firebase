{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshsharma/Desktop/project2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { browserStorage, userInfoKey } from './BrowserStorage';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth(app);\nfunction App() {\n  _s();\n  useEffect(() => {\n    getRedirectResult(auth).then(result => {\n      // This gives you a Google Access Token. You can use it to access Google APIs.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n\n      // The signed-in user info.\n      const user = result.user;\n      console.log(\"aa\");\n      browserStorage.setItem(userInfoKey, JSON.stringify(user));\n      // IdP data available using getAdditionalUserInfo(result)\n      // ...\n    }).catch(error => {\n      var _error$customData;\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error === null || error === void 0 ? void 0 : (_error$customData = error.customData) === null || _error$customData === void 0 ? void 0 : _error$customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n      // ...\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        signOut(auth).then(() => {\n          // Sign-out successful.\n          browserStorage.removeItem(userInfoKey);\n        }).catch(error => {\n          // An error happened.\n        });\n      },\n      children: \"out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        signInWithRedirect(auth, provider);\n      },\n      children: \" signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getAuth","signInWithRedirect","GoogleAuthProvider","getRedirectResult","signOut","initializeApp","getAnalytics","browserStorage","userInfoKey","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","provider","auth","App","_s","then","result","credential","credentialFromResult","token","accessToken","user","console","log","setItem","JSON","stringify","catch","error","_error$customData","errorCode","code","errorMessage","message","email","customData","credentialFromError","className","children","onClick","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/neeleshsharma/Desktop/project2/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { getAuth, signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { browserStorage, userInfoKey } from './BrowserStorage';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDR7-s410uPNtSYw4zVva97SRcjLrALeNw\",\n  authDomain: \"project-2-4dae9.firebaseapp.com\",\n  projectId: \"project-2-4dae9\",\n  storageBucket: \"project-2-4dae9.appspot.com\",\n  messagingSenderId: \"839909928632\",\n  appId: \"1:839909928632:web:9a29480b819af837e10e4d\",\n  measurementId: \"G-1V9C17PCRK\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst provider = new GoogleAuthProvider();\n\nconst auth = getAuth(app);\n\nfunction App() {\n\n  useEffect(()=>{    \n      getRedirectResult(auth)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access Google APIs.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n\n        // The signed-in user info.\n        const user = result.user;\n        console.log(\"aa\");\n        browserStorage.setItem(userInfoKey, JSON.stringify(user));\n        // IdP data available using getAdditionalUserInfo(result)\n        // ...\n      }).catch((error) => { \n         // Handle Errors here.\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          // The email of the user's account used.\n          const email = error?.customData?.email;\n          // The AuthCredential type that was used.\n          const credential = GoogleAuthProvider.credentialFromError(error);\n          // ...\n        // ...\n      });\n    }\n   , []);\n\n  return (\n    <div className=\"App\">\n      <button onClick={()=>{\n        signOut(auth).then(() => {\n          // Sign-out successful.\n          browserStorage.removeItem(userInfoKey);\n        }).catch((error) => {\n          // An error happened.\n        });\n      }}>out</button>\n      <button onClick={()=>{\n      signInWithRedirect(auth, provider);\n      }}> signin</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}